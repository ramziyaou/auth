# version: '3.7'

# services:
#   db:
#     container_name: "auth_db"
#     platform: linux/x86_64
#     build:
#       context: .
#       dockerfile: db.Dockerfile
#     networks:
#       - default
#     restart: always
#     ports:
#       # <Port exposed> : < MySQL Port running inside container>
#       - "3307:3306"
#     # setting some env vars to create the DB
#     environment:
#       MYSQL_RANDOM_ROOT_PASSWORD: "secret"
#       MYSQL_DATABASE: "test"
#       MYSQL_USER: "tester"
#       MYSQL_PASSWORD: "secret"
#       # OR if you want to use "root" as the user, just these two lines
#       # MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
#       # MYSQL_DATABASE: ${DATABASE_NAME}

#     # we mount a data volume to make sure we don't lose data
#     volumes:
#       - mysql_data:/var/lib/mysql
#     # command: --default-authentication-plugin=mysql_native_password
#   api:
#     container_name:  "auth_api"
#     # we want to use the image which is build from our Dockerfile
#     build:
#       context: .
#       dockerfile: api.Dockerfile
#     ports:
#       - "8080:8080"
#     # we are depending on the mysql backend
#     depends_on:
#       - db
#       - redis
#     # We mount the working dir into the container, handy for development
#     # This is what makes the hot reloading work inside of a Docker container
#     volumes:
#       - .:/app/
#   redis:
#     image: redis
#     ports:
#       - "6379:6379"

# networks:
#   default:
# volumes:
#   mysql_data:

# -----------2------------------
# version: "3.8"

# services:
#   db:
#     container_name: "auth_db"
#     image: mysql:8.0.23
#     environment: 
#       MYSQL_RANDOM_ROOT_PASSWORD: "secret"
#       MYSQL_DATABASE: "auth"
#       MYSQL_USER: "tester"
#       MYSQL_PASSWORD: "secret"
#     ports:
#       - "3307:3306"
#     volumes:
#       - ./init.sql:/docker-entrypoint-initdb.d/
#   api:
#     container_name: "auth_api"
#     build:
#       context: .
#     ports:
#       - "8080:8080"
#     depends_on:
#       - db
#       - redis
#   redis:
#     image: redis
#     ports:
#       - "6379:6379"

# volumes:
#   mysql_data:


version: "3.8"

services:
  db:
    container_name: "auth_db"
    image: db
    build:
      context: .
      target: build2
    environment: 
      MYSQL_RANDOM_ROOT_PASSWORD: "secret"
      MYSQL_DATABASE: "auth"
      MYSQL_USER: "tester"
      MYSQL_PASSWORD: "secret"
      TZ: "Asia/Almaty"
    ports:
      - "3307:3306"
    volumes:
      - mysql_dump:/var/lib/mysql
      # - ../user/repository/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  api:
    container_name: "auth_api"
    build:
      context: .
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis
  redis:
    image: redis
    ports:
      - "6379:6379"

volumes:
  mysql_dump:
